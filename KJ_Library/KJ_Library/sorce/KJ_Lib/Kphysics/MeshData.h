#ifndef __H_SHAPE_DATA_H__
#define __H_SHAPE_DATA_H__
#include "Kmath.h"

#define CONVEX_MESH_MAX_VERTICES 34
#define CONVEX_MESH_MAX_EDGES    96
#define CONVEX_MESH_MAX_FACES    64

//----------------------------------------------------------------------------------------------------------------------------
//
//
//    あくまで物理演算用のデータとして省エネ設計とする！
//
//
//----------------------------------------------------------------------------------------------------------------------------

namespace Kmath{
	
	/*
	struct CollidableShape{

	};*/
	
	//----------------------------------------------------------------------------------------------------------------------------
	//		 Edge
	//----------------------------------------------------------------------------------------------------------------------------
	enum EdgeType{
		CONVEX = 0,
		CONCAVE,
		FLAT,
	};

	struct Edge{
		int type;     //
		int verId[2]; //利用する頂点ID
		int faceId[2]; //共有している面ID
	};

	//----------------------------------------------------------------------------------------------------------------------------
	//		Face(三角形)
	//----------------------------------------------------------------------------------------------------------------------------
	struct Face{
		int verId[3];
		int egdeId[3];   //頂点IDさえあればいらない気もするが・・・？
		Vector3 normal;
	};

	//----------------------------------------------------------------------------------------------------------------------------
	//		凸メッシュクラス
	//----------------------------------------------------------------------------------------------------------------------------
	//頂点34、面64、辺96以下
	struct ConvexMesh{
		int m_numVertices;
		int m_numFaces;
		int m_numEdges;
		Vector3 m_vertices[CONVEX_MESH_MAX_VERTICES];
		Edge m_Edges[CONVEX_MESH_MAX_EDGES];
		Face m_Faces[CONVEX_MESH_MAX_FACES];

		void Initialize(){
			m_numVertices = 0;
			m_numFaces = 0;
			m_numEdges = 0;
		}
	};


}

#endif